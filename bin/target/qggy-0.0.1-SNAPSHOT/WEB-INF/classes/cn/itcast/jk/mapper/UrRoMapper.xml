<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.itcast.jk.mapper.UrRoMapper">
    <!-- resultMap映射 -->
    <resultMap type="cn.itcast.jk.domain.UrRo" id="urRoRM">
        <!-- 主键 -->
        <id property="id" column="USER_ROLE_ID"/>
        <!-- 一般属性 -->
        <result property="suserId" column="SUSER_ID"/>
        <result property="sroleId" column="SROLE_ID"/>
        <result property="sroleName" column="SROLE_NAME"/>

    </resultMap>

    <!-- 查询 -->
    <select id="find" parameterType="map" resultMap="urRoRM">
        SELECT
        *
        FROM
        user_role
    </select>

    <!-- 查询一个 -->
    <select id="get" parameterType="string" resultMap="urRoRM">
        SELECT
        *
        FROM
        user_role
        WHERE USER_ROLE_ID = #{aid}
    </select>

    <!-- 新增 oracle jdbc驱动 当这个值为null时，必须告诉它当前字段默认值的类型jdbcType=VARCHAR （mybatis定义）,
        无效的列类型: 1111; nested exception is java.sql.SQLException mysql不用写 -->
    <insert id="insert" parameterType="cn.itcast.jk.domain.UrRo">
        INSERT INTO user_role(
        USER_ROLE_ID,
        SUSER_ID,
        SROLE_ID,
        SROLE_NAME
        )
        VALUES
        (
        #{id},
        #{suserId,jdbcType=VARCHAR},
        #{sroleId, jdbcType=VARCHAR},
        #{sroleName, jdbcType=VARCHAR}
        )
    </insert>

    <!-- 修改 动态SQL语句 -->
    <update id="update" parameterType="cn.itcast.jk.domain.UrRo">
        UPDATE user_role
        <set>
            <if test="userId != null">USER_ID=#{urRoName, jdbcType=VARCHAR},</if>
            <if test="roleId != null">ROLE_ID=#{urRoRemark, jdbcType=VARCHAR},</if>
        </set>
        WHERE USER_ROLE_ID=#{id}
    </update>

    <!-- 删除一条 -->
    <delete id="deleteById" parameterType="string">
        DELETE FROM user_role
        WHERE
        USER_ROLE_ID=#{id}
    </delete>

    <!-- 删除多条（一维字符串数组） -->
    <delete id="delete" parameterType="string">
        DELETE FROM user_role
        WHERE USER_ROLE_ID IN
        <foreach collection="array" item="id" open="(" close=")"
                 separator=",">
            #{id}
        </foreach>
    </delete>

    <!-- 修改状态 -->
    <update id="updateState" parameterType="map">
        UPDATE user_role SET AREA_STATE=#{state}
        WHERE AREA_ID IN
        <foreach collection="ids" item="id" open="(" close=")"
                 separator=",">
            #{id}
        </foreach>
    </update>

</mapper>